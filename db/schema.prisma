// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Account {
  id            String    @id @default(cuid())   
  name          String?
  users         User[]
  documents     Document[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model User {
  id            String    @id @default(cuid())   
  name          String    @default("User Name")
  email         String    @unique
  password      String 
  profileImage  String?   
  account       Account   @relation(fields: [accountId], references: [id])
  accountId     String    // relation scalar field  (used in the `@relation` attribute above) 
  showDocuments      Boolean    @default(true)
  showBooks     Boolean    @default(true)
  books         Book[]
  feedback      Feedback[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Book {
  id            String     @id @default(cuid()) 
  name          String
  isbn          String
  author        String?
  genre         String?
  rating        Int?     
  image         String?
  wishlist      Boolean    @default(false)
  read          Boolean    @default(false)
  user          User       @relation(fields: [userId], references: [id])
  userId        String     // relation scalar field  (used in the `@relation` attribute above) 
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Feedback {
  id           String     @id @default(cuid()) 
  title        String
  body         String?
  user         User       @relation(fields: [userId], references: [id])
  userId       String     // relation scalar field  (used in the `@relation` attribute above) 
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Document {
  id           String     @id @default(cuid()) 
  title        String
  description  String?
  fileName     String
  account      Account    @relation(fields: [accountId], references: [id])
  accountId    String     // relation scalar field  (used in the `@relation` attribute above) 
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}